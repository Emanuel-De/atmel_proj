
E1_PWM_Testprogramm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000015c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000108  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000015c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000018c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000001cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000219  00000000  00000000  000001f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000e7  00000000  00000000  0000040d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001ba  00000000  00000000  000004f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  000006b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001af  00000000  00000000  000006e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000018  00000000  00000000  00000893  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 49 00 	call	0x92	; 0x92 <main>
  78:	0c 94 82 00 	jmp	0x104	; 0x104 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <init_pwm>:
#include <avr/io.h>
#include <util/delay.h>

void init_pwm(void)
{
    DDRD = _BV(PD6);  // PWM-Ausgabe erfolgt immer an PD6/OC0A
  80:	80 e4       	ldi	r24, 0x40	; 64
  82:	8a b9       	out	0x0a, r24	; 10
    TCCR0A = _BV(COM0A1) + _BV(WGM00) + _BV(WGM01);  // S. 139f., Tab. 19-5/-9
  84:	83 e8       	ldi	r24, 0x83	; 131
  86:	84 bd       	out	0x24, r24	; 36
    TCCR0B = _BV(CS00) + _BV(CS01);  // Datenblatt S. 142, Tab. 19-10
  88:	83 e0       	ldi	r24, 0x03	; 3
  8a:	85 bd       	out	0x25, r24	; 37
    OCR0A  = 128;  // Tastgrad
  8c:	80 e8       	ldi	r24, 0x80	; 128
  8e:	87 bd       	out	0x27, r24	; 39
  90:	08 95       	ret

00000092 <main>:
}

int main(void)
{
    init_pwm();
  92:	0e 94 40 00 	call	0x80	; 0x80 <init_pwm>
    while(1)
    {
        OCR0A =   0; _delay_ms(1000);    // Frequenz, Tastgrad = ...?!
        OCR0A =  64; _delay_ms(1000);    OCR0A = 128; _delay_ms(1000);
  96:	30 e4       	ldi	r19, 0x40	; 64
  98:	20 e8       	ldi	r18, 0x80	; 128
        OCR0A = 192; _delay_ms(1000);    OCR0A = 255; _delay_ms(1000);
  9a:	90 ec       	ldi	r25, 0xC0	; 192
  9c:	8f ef       	ldi	r24, 0xFF	; 255
int main(void)
{
    init_pwm();
    while(1)
    {
        OCR0A =   0; _delay_ms(1000);    // Frequenz, Tastgrad = ...?!
  9e:	17 bc       	out	0x27, r1	; 39
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a0:	4f ef       	ldi	r20, 0xFF	; 255
  a2:	53 ed       	ldi	r21, 0xD3	; 211
  a4:	60 e3       	ldi	r22, 0x30	; 48
  a6:	41 50       	subi	r20, 0x01	; 1
  a8:	50 40       	sbci	r21, 0x00	; 0
  aa:	60 40       	sbci	r22, 0x00	; 0
  ac:	e1 f7       	brne	.-8      	; 0xa6 <main+0x14>
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <main+0x1e>
  b0:	00 00       	nop
        OCR0A =  64; _delay_ms(1000);    OCR0A = 128; _delay_ms(1000);
  b2:	37 bd       	out	0x27, r19	; 39
  b4:	4f ef       	ldi	r20, 0xFF	; 255
  b6:	53 ed       	ldi	r21, 0xD3	; 211
  b8:	60 e3       	ldi	r22, 0x30	; 48
  ba:	41 50       	subi	r20, 0x01	; 1
  bc:	50 40       	sbci	r21, 0x00	; 0
  be:	60 40       	sbci	r22, 0x00	; 0
  c0:	e1 f7       	brne	.-8      	; 0xba <main+0x28>
  c2:	00 c0       	rjmp	.+0      	; 0xc4 <main+0x32>
  c4:	00 00       	nop
  c6:	27 bd       	out	0x27, r18	; 39
  c8:	4f ef       	ldi	r20, 0xFF	; 255
  ca:	53 ed       	ldi	r21, 0xD3	; 211
  cc:	60 e3       	ldi	r22, 0x30	; 48
  ce:	41 50       	subi	r20, 0x01	; 1
  d0:	50 40       	sbci	r21, 0x00	; 0
  d2:	60 40       	sbci	r22, 0x00	; 0
  d4:	e1 f7       	brne	.-8      	; 0xce <main+0x3c>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <main+0x46>
  d8:	00 00       	nop
        OCR0A = 192; _delay_ms(1000);    OCR0A = 255; _delay_ms(1000);
  da:	97 bd       	out	0x27, r25	; 39
  dc:	4f ef       	ldi	r20, 0xFF	; 255
  de:	53 ed       	ldi	r21, 0xD3	; 211
  e0:	60 e3       	ldi	r22, 0x30	; 48
  e2:	41 50       	subi	r20, 0x01	; 1
  e4:	50 40       	sbci	r21, 0x00	; 0
  e6:	60 40       	sbci	r22, 0x00	; 0
  e8:	e1 f7       	brne	.-8      	; 0xe2 <main+0x50>
  ea:	00 c0       	rjmp	.+0      	; 0xec <main+0x5a>
  ec:	00 00       	nop
  ee:	87 bd       	out	0x27, r24	; 39
  f0:	4f ef       	ldi	r20, 0xFF	; 255
  f2:	53 ed       	ldi	r21, 0xD3	; 211
  f4:	60 e3       	ldi	r22, 0x30	; 48
  f6:	41 50       	subi	r20, 0x01	; 1
  f8:	50 40       	sbci	r21, 0x00	; 0
  fa:	60 40       	sbci	r22, 0x00	; 0
  fc:	e1 f7       	brne	.-8      	; 0xf6 <main+0x64>
  fe:	00 c0       	rjmp	.+0      	; 0x100 <main+0x6e>
 100:	00 00       	nop
 102:	cd cf       	rjmp	.-102    	; 0x9e <main+0xc>

00000104 <_exit>:
 104:	f8 94       	cli

00000106 <__stop_program>:
 106:	ff cf       	rjmp	.-2      	; 0x106 <__stop_program>
