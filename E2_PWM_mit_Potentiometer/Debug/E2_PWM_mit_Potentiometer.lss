
E2_PWM_mit_Potentiometer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000828  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007d4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000828  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000858  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000898  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000018c  00000000  00000000  000008d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000f1  00000000  00000000  00000a64  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000178  00000000  00000000  00000b55  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000074  00000000  00000000  00000cd0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001a2  00000000  00000000  00000d44  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000fd  00000000  00000000  00000ee6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00000fe3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
   4:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
   8:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
   c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  10:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  14:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  18:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  1c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  20:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  24:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  28:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  2c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  30:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  34:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  38:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  3c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  40:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  44:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  48:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  4c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  50:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  54:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  58:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  5c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  60:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  64:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  68:	07 63       	ori	r16, 0x37	; 55
  6a:	42 36       	cpi	r20, 0x62	; 98
  6c:	b7 9b       	sbis	0x16, 7	; 22
  6e:	d8 a7       	std	Y+40, r29	; 0x28
  70:	1a 39       	cpi	r17, 0x9A	; 154
  72:	68 56       	subi	r22, 0x68	; 104
  74:	18 ae       	std	Y+56, r1	; 0x38
  76:	ba ab       	std	Y+50, r27	; 0x32
  78:	55 8c       	ldd	r5, Z+29	; 0x1d
  7a:	1d 3c       	cpi	r17, 0xCD	; 205
  7c:	b7 cc       	rjmp	.-1682   	; 0xfffff9ec <__eeprom_end+0xff7ef9ec>
  7e:	57 63       	ori	r21, 0x37	; 55
  80:	bd 6d       	ori	r27, 0xDD	; 221
  82:	ed fd       	.word	0xfded	; ????
  84:	75 3e       	cpi	r23, 0xE5	; 229
  86:	f6 17       	cp	r31, r22
  88:	72 31       	cpi	r23, 0x12	; 18
  8a:	bf 00       	.word	0x00bf	; ????
  8c:	00 00       	nop
  8e:	80 3f       	cpi	r24, 0xF0	; 240

00000090 <__ctors_end>:
  90:	11 24       	eor	r1, r1
  92:	1f be       	out	0x3f, r1	; 63
  94:	cf ef       	ldi	r28, 0xFF	; 255
  96:	d8 e0       	ldi	r29, 0x08	; 8
  98:	de bf       	out	0x3e, r29	; 62
  9a:	cd bf       	out	0x3d, r28	; 61
  9c:	0e 94 88 00 	call	0x110	; 0x110 <main>
  a0:	0c 94 e8 03 	jmp	0x7d0	; 0x7d0 <_exit>

000000a4 <__bad_interrupt>:
  a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a8 <init_pwm>:
// ---------------------------------------------------------------------------
// Fast-PWM am Anschluss OC0A/PD6 initialisieren
// ---------------------------------------------------------------------------
void init_pwm(void)
{
    DDRD = _BV(PD6);  // PWM-Ausgabe erfolgt immer an OC0A/PD6
  a8:	80 e4       	ldi	r24, 0x40	; 64
  aa:	8a b9       	out	0x0a, r24	; 10
    TCCR0A = _BV(COM0A1) + _BV(WGM00) + _BV(WGM01);  // S. 139f., Tab. 19-5/-9
  ac:	83 e8       	ldi	r24, 0x83	; 131
  ae:	84 bd       	out	0x24, r24	; 36
    TCCR0B = _BV(CS00) + _BV(CS01);  // Datenblatt S. 142, Tab. 19-10
  b0:	83 e0       	ldi	r24, 0x03	; 3
  b2:	85 bd       	out	0x25, r24	; 37
    OCR0A  = 128;  // Tastgrad
  b4:	80 e8       	ldi	r24, 0x80	; 128
  b6:	87 bd       	out	0x27, r24	; 39
  b8:	08 95       	ret

000000ba <init_adc>:
// AD-Wandler initialisieren
// ---------------------------------------------------------------------------
void init_adc(void)
{
    // Referenz für AD-Wandler = VCC = 5V (Datenblatt S. 317)
    ADMUX = _BV(REFS0);
  ba:	80 e4       	ldi	r24, 0x40	; 64
  bc:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    
    // AD-Wandler einschalten, Prescaler = 128 (Datenblatt S. 320)
    ADCSRA = _BV(ADEN) | _BV(ADPS2) | _BV(ADPS1) | _BV(ADPS0);
  c0:	87 e8       	ldi	r24, 0x87	; 135
  c2:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
  c6:	08 95       	ret

000000c8 <read_adc0>:
uint16_t read_adc0(void)
{
    // ADSC-Bit setzen, um Wandlung zu starten, das ADSC-Bit wird nach
    // dem Ende der Wandlung automatisch wieder gelöscht. Der eingelesene
    // 10-Bit-Wert steht anschließend im Register ADC.
    ADCSRA |= _BV(ADSC);
  c8:	ea e7       	ldi	r30, 0x7A	; 122
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	80 64       	ori	r24, 0x40	; 64
  d0:	80 83       	st	Z, r24
    while(ADCSRA & _BV(ADSC)) { }  // Auf das Ende der Wandlung warten...
  d2:	80 81       	ld	r24, Z
  d4:	86 fd       	sbrc	r24, 6
  d6:	fd cf       	rjmp	.-6      	; 0xd2 <read_adc0+0xa>
    return ADC;
  d8:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
  dc:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
}
  e0:	08 95       	ret

000000e2 <read_adc0_mean>:
// ---------------------------------------------------------------------------
// 8 Analogwerte von Eingang ADC0 (Anschluss PC0) einlesen und mitteln:
// Rückgabewert 0...1023 entspricht Spannung von 0...5 Volt
// ---------------------------------------------------------------------------
uint16_t read_adc0_mean(void)
{
  e2:	0f 93       	push	r16
  e4:	1f 93       	push	r17
  e6:	cf 93       	push	r28
  e8:	c8 e0       	ldi	r28, 0x08	; 8
    uint16_t sum = 0;
  ea:	00 e0       	ldi	r16, 0x00	; 0
  ec:	10 e0       	ldi	r17, 0x00	; 0
    uint8_t i;
    for(i = 0; i < 8; i++) sum += read_adc0();
  ee:	0e 94 64 00 	call	0xc8	; 0xc8 <read_adc0>
  f2:	08 0f       	add	r16, r24
  f4:	19 1f       	adc	r17, r25
  f6:	c1 50       	subi	r28, 0x01	; 1
  f8:	d1 f7       	brne	.-12     	; 0xee <read_adc0_mean+0xc>
    return sum / 8;
}
  fa:	c8 01       	movw	r24, r16
  fc:	96 95       	lsr	r25
  fe:	87 95       	ror	r24
 100:	96 95       	lsr	r25
 102:	87 95       	ror	r24
 104:	96 95       	lsr	r25
 106:	87 95       	ror	r24
 108:	cf 91       	pop	r28
 10a:	1f 91       	pop	r17
 10c:	0f 91       	pop	r16
 10e:	08 95       	ret

00000110 <main>:
// ---------------------------------------------------------------------------
// Hauptprogramm
// ---------------------------------------------------------------------------
int main(void)
{
    init_adc();
 110:	0e 94 5d 00 	call	0xba	; 0xba <init_adc>
    init_pwm();
 114:	0e 94 54 00 	call	0xa8	; 0xa8 <init_pwm>

    while(1)
    {
        uint16_t analog = read_adc0_mean();
 118:	0e 94 71 00 	call	0xe2	; 0xe2 <read_adc0_mean>
        // AD-Wert linear in PWM-Tastgrad umrechnen:
        // OCR0A = (uint8_t)255 - (uint8_t)(analog / 4);
        // OCR0A = (uint8_t)(analog / 4);

        // AD-Wert exponentiell in PWM-Tastgrad umrechnen:
        double tmp = 30.9165 * (exp(0.0021744 * analog) - 1);
 11c:	bc 01       	movw	r22, r24
 11e:	80 e0       	ldi	r24, 0x00	; 0
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	0e 94 a7 01 	call	0x34e	; 0x34e <__floatunsisf>
 126:	21 e6       	ldi	r18, 0x61	; 97
 128:	30 e8       	ldi	r19, 0x80	; 128
 12a:	4e e0       	ldi	r20, 0x0E	; 14
 12c:	5b e3       	ldi	r21, 0x3B	; 59
 12e:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <__mulsf3>
 132:	0e 94 46 01 	call	0x28c	; 0x28c <exp>
 136:	20 e0       	ldi	r18, 0x00	; 0
 138:	30 e0       	ldi	r19, 0x00	; 0
 13a:	40 e8       	ldi	r20, 0x80	; 128
 13c:	5f e3       	ldi	r21, 0x3F	; 63
 13e:	0e 94 cc 00 	call	0x198	; 0x198 <__subsf3>
 142:	2e ef       	ldi	r18, 0xFE	; 254
 144:	34 e5       	ldi	r19, 0x54	; 84
 146:	47 ef       	ldi	r20, 0xF7	; 247
 148:	51 e4       	ldi	r21, 0x41	; 65
 14a:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <__mulsf3>
 14e:	6b 01       	movw	r12, r22
 150:	7c 01       	movw	r14, r24
        if(tmp > 255) tmp = 255;
 152:	20 e0       	ldi	r18, 0x00	; 0
 154:	30 e0       	ldi	r19, 0x00	; 0
 156:	4f e7       	ldi	r20, 0x7F	; 127
 158:	53 e4       	ldi	r21, 0x43	; 67
 15a:	0e 94 80 02 	call	0x500	; 0x500 <__gesf2>
 15e:	18 16       	cp	r1, r24
 160:	6c f0       	brlt	.+26     	; 0x17c <main+0x6c>
        if(tmp <   0) tmp =   0;
 162:	20 e0       	ldi	r18, 0x00	; 0
 164:	30 e0       	ldi	r19, 0x00	; 0
 166:	a9 01       	movw	r20, r18
 168:	c7 01       	movw	r24, r14
 16a:	b6 01       	movw	r22, r12
 16c:	0e 94 39 01 	call	0x272	; 0x272 <__cmpsf2>
 170:	88 23       	and	r24, r24
 172:	64 f4       	brge	.+24     	; 0x18c <main+0x7c>
 174:	c1 2c       	mov	r12, r1
 176:	d1 2c       	mov	r13, r1
 178:	76 01       	movw	r14, r12
 17a:	08 c0       	rjmp	.+16     	; 0x18c <main+0x7c>
        // OCR0A = (uint8_t)255 - (uint8_t)(analog / 4);
        // OCR0A = (uint8_t)(analog / 4);

        // AD-Wert exponentiell in PWM-Tastgrad umrechnen:
        double tmp = 30.9165 * (exp(0.0021744 * analog) - 1);
        if(tmp > 255) tmp = 255;
 17c:	0f 2e       	mov	r0, r31
 17e:	c1 2c       	mov	r12, r1
 180:	d1 2c       	mov	r13, r1
 182:	ff e7       	ldi	r31, 0x7F	; 127
 184:	ef 2e       	mov	r14, r31
 186:	f3 e4       	ldi	r31, 0x43	; 67
 188:	ff 2e       	mov	r15, r31
 18a:	f0 2d       	mov	r31, r0
        if(tmp <   0) tmp =   0;
        OCR0A = (uint8_t)(tmp);
 18c:	c7 01       	movw	r24, r14
 18e:	b6 01       	movw	r22, r12
 190:	0e 94 78 01 	call	0x2f0	; 0x2f0 <__fixunssfsi>
 194:	67 bd       	out	0x27, r22	; 39
        //           ADC =  511 --> PWM =  63
        //           ADC = 1023 --> PWM = 255
        //
        // Ergebnis:
        //           A = C = 30.9165 und B = 0.0021744
    }
 196:	c0 cf       	rjmp	.-128    	; 0x118 <main+0x8>

00000198 <__subsf3>:
 198:	50 58       	subi	r21, 0x80	; 128

0000019a <__addsf3>:
 19a:	bb 27       	eor	r27, r27
 19c:	aa 27       	eor	r26, r26
 19e:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <__addsf3x>
 1a2:	0c 94 46 02 	jmp	0x48c	; 0x48c <__fp_round>
 1a6:	0e 94 38 02 	call	0x470	; 0x470 <__fp_pscA>
 1aa:	38 f0       	brcs	.+14     	; 0x1ba <__addsf3+0x20>
 1ac:	0e 94 3f 02 	call	0x47e	; 0x47e <__fp_pscB>
 1b0:	20 f0       	brcs	.+8      	; 0x1ba <__addsf3+0x20>
 1b2:	39 f4       	brne	.+14     	; 0x1c2 <__addsf3+0x28>
 1b4:	9f 3f       	cpi	r25, 0xFF	; 255
 1b6:	19 f4       	brne	.+6      	; 0x1be <__addsf3+0x24>
 1b8:	26 f4       	brtc	.+8      	; 0x1c2 <__addsf3+0x28>
 1ba:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__fp_nan>
 1be:	0e f4       	brtc	.+2      	; 0x1c2 <__addsf3+0x28>
 1c0:	e0 95       	com	r30
 1c2:	e7 fb       	bst	r30, 7
 1c4:	0c 94 08 02 	jmp	0x410	; 0x410 <__fp_inf>

000001c8 <__addsf3x>:
 1c8:	e9 2f       	mov	r30, r25
 1ca:	0e 94 57 02 	call	0x4ae	; 0x4ae <__fp_split3>
 1ce:	58 f3       	brcs	.-42     	; 0x1a6 <__addsf3+0xc>
 1d0:	ba 17       	cp	r27, r26
 1d2:	62 07       	cpc	r22, r18
 1d4:	73 07       	cpc	r23, r19
 1d6:	84 07       	cpc	r24, r20
 1d8:	95 07       	cpc	r25, r21
 1da:	20 f0       	brcs	.+8      	; 0x1e4 <__addsf3x+0x1c>
 1dc:	79 f4       	brne	.+30     	; 0x1fc <__addsf3x+0x34>
 1de:	a6 f5       	brtc	.+104    	; 0x248 <__addsf3x+0x80>
 1e0:	0c 94 79 02 	jmp	0x4f2	; 0x4f2 <__fp_zero>
 1e4:	0e f4       	brtc	.+2      	; 0x1e8 <__addsf3x+0x20>
 1e6:	e0 95       	com	r30
 1e8:	0b 2e       	mov	r0, r27
 1ea:	ba 2f       	mov	r27, r26
 1ec:	a0 2d       	mov	r26, r0
 1ee:	0b 01       	movw	r0, r22
 1f0:	b9 01       	movw	r22, r18
 1f2:	90 01       	movw	r18, r0
 1f4:	0c 01       	movw	r0, r24
 1f6:	ca 01       	movw	r24, r20
 1f8:	a0 01       	movw	r20, r0
 1fa:	11 24       	eor	r1, r1
 1fc:	ff 27       	eor	r31, r31
 1fe:	59 1b       	sub	r21, r25
 200:	99 f0       	breq	.+38     	; 0x228 <__addsf3x+0x60>
 202:	59 3f       	cpi	r21, 0xF9	; 249
 204:	50 f4       	brcc	.+20     	; 0x21a <__addsf3x+0x52>
 206:	50 3e       	cpi	r21, 0xE0	; 224
 208:	68 f1       	brcs	.+90     	; 0x264 <__addsf3x+0x9c>
 20a:	1a 16       	cp	r1, r26
 20c:	f0 40       	sbci	r31, 0x00	; 0
 20e:	a2 2f       	mov	r26, r18
 210:	23 2f       	mov	r18, r19
 212:	34 2f       	mov	r19, r20
 214:	44 27       	eor	r20, r20
 216:	58 5f       	subi	r21, 0xF8	; 248
 218:	f3 cf       	rjmp	.-26     	; 0x200 <__addsf3x+0x38>
 21a:	46 95       	lsr	r20
 21c:	37 95       	ror	r19
 21e:	27 95       	ror	r18
 220:	a7 95       	ror	r26
 222:	f0 40       	sbci	r31, 0x00	; 0
 224:	53 95       	inc	r21
 226:	c9 f7       	brne	.-14     	; 0x21a <__addsf3x+0x52>
 228:	7e f4       	brtc	.+30     	; 0x248 <__addsf3x+0x80>
 22a:	1f 16       	cp	r1, r31
 22c:	ba 0b       	sbc	r27, r26
 22e:	62 0b       	sbc	r22, r18
 230:	73 0b       	sbc	r23, r19
 232:	84 0b       	sbc	r24, r20
 234:	ba f0       	brmi	.+46     	; 0x264 <__addsf3x+0x9c>
 236:	91 50       	subi	r25, 0x01	; 1
 238:	a1 f0       	breq	.+40     	; 0x262 <__addsf3x+0x9a>
 23a:	ff 0f       	add	r31, r31
 23c:	bb 1f       	adc	r27, r27
 23e:	66 1f       	adc	r22, r22
 240:	77 1f       	adc	r23, r23
 242:	88 1f       	adc	r24, r24
 244:	c2 f7       	brpl	.-16     	; 0x236 <__addsf3x+0x6e>
 246:	0e c0       	rjmp	.+28     	; 0x264 <__addsf3x+0x9c>
 248:	ba 0f       	add	r27, r26
 24a:	62 1f       	adc	r22, r18
 24c:	73 1f       	adc	r23, r19
 24e:	84 1f       	adc	r24, r20
 250:	48 f4       	brcc	.+18     	; 0x264 <__addsf3x+0x9c>
 252:	87 95       	ror	r24
 254:	77 95       	ror	r23
 256:	67 95       	ror	r22
 258:	b7 95       	ror	r27
 25a:	f7 95       	ror	r31
 25c:	9e 3f       	cpi	r25, 0xFE	; 254
 25e:	08 f0       	brcs	.+2      	; 0x262 <__addsf3x+0x9a>
 260:	b0 cf       	rjmp	.-160    	; 0x1c2 <__addsf3+0x28>
 262:	93 95       	inc	r25
 264:	88 0f       	add	r24, r24
 266:	08 f0       	brcs	.+2      	; 0x26a <__addsf3x+0xa2>
 268:	99 27       	eor	r25, r25
 26a:	ee 0f       	add	r30, r30
 26c:	97 95       	ror	r25
 26e:	87 95       	ror	r24
 270:	08 95       	ret

00000272 <__cmpsf2>:
 272:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <__fp_cmp>
 276:	08 f4       	brcc	.+2      	; 0x27a <__cmpsf2+0x8>
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	08 95       	ret
 27c:	29 f4       	brne	.+10     	; 0x288 <__cmpsf2+0x16>
 27e:	16 f0       	brts	.+4      	; 0x284 <__cmpsf2+0x12>
 280:	0c 94 08 02 	jmp	0x410	; 0x410 <__fp_inf>
 284:	0c 94 79 02 	jmp	0x4f2	; 0x4f2 <__fp_zero>
 288:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__fp_nan>

0000028c <exp>:
 28c:	0e 94 5f 02 	call	0x4be	; 0x4be <__fp_splitA>
 290:	a8 f3       	brcs	.-22     	; 0x27c <__cmpsf2+0xa>
 292:	96 38       	cpi	r25, 0x86	; 134
 294:	a0 f7       	brcc	.-24     	; 0x27e <__cmpsf2+0xc>
 296:	07 f8       	bld	r0, 7
 298:	0f 92       	push	r0
 29a:	e8 94       	clt
 29c:	2b e3       	ldi	r18, 0x3B	; 59
 29e:	3a ea       	ldi	r19, 0xAA	; 170
 2a0:	48 eb       	ldi	r20, 0xB8	; 184
 2a2:	5f e7       	ldi	r21, 0x7F	; 127
 2a4:	0e 94 11 03 	call	0x622	; 0x622 <__mulsf3_pse>
 2a8:	0f 92       	push	r0
 2aa:	0f 92       	push	r0
 2ac:	0f 92       	push	r0
 2ae:	4d b7       	in	r20, 0x3d	; 61
 2b0:	5e b7       	in	r21, 0x3e	; 62
 2b2:	0f 92       	push	r0
 2b4:	0e 94 c7 02 	call	0x58e	; 0x58e <modf>
 2b8:	e8 e6       	ldi	r30, 0x68	; 104
 2ba:	f0 e0       	ldi	r31, 0x00	; 0
 2bc:	0e 94 11 02 	call	0x422	; 0x422 <__fp_powser>
 2c0:	4f 91       	pop	r20
 2c2:	5f 91       	pop	r21
 2c4:	ef 91       	pop	r30
 2c6:	ff 91       	pop	r31
 2c8:	e5 95       	asr	r30
 2ca:	ee 1f       	adc	r30, r30
 2cc:	ff 1f       	adc	r31, r31
 2ce:	49 f0       	breq	.+18     	; 0x2e2 <exp+0x56>
 2d0:	fe 57       	subi	r31, 0x7E	; 126
 2d2:	e0 68       	ori	r30, 0x80	; 128
 2d4:	44 27       	eor	r20, r20
 2d6:	ee 0f       	add	r30, r30
 2d8:	44 1f       	adc	r20, r20
 2da:	fa 95       	dec	r31
 2dc:	e1 f7       	brne	.-8      	; 0x2d6 <exp+0x4a>
 2de:	41 95       	neg	r20
 2e0:	55 0b       	sbc	r21, r21
 2e2:	0e 94 91 02 	call	0x522	; 0x522 <ldexp>
 2e6:	0f 90       	pop	r0
 2e8:	07 fe       	sbrs	r0, 7
 2ea:	0c 94 85 02 	jmp	0x50a	; 0x50a <inverse>
 2ee:	08 95       	ret

000002f0 <__fixunssfsi>:
 2f0:	0e 94 5f 02 	call	0x4be	; 0x4be <__fp_splitA>
 2f4:	88 f0       	brcs	.+34     	; 0x318 <__fixunssfsi+0x28>
 2f6:	9f 57       	subi	r25, 0x7F	; 127
 2f8:	98 f0       	brcs	.+38     	; 0x320 <__fixunssfsi+0x30>
 2fa:	b9 2f       	mov	r27, r25
 2fc:	99 27       	eor	r25, r25
 2fe:	b7 51       	subi	r27, 0x17	; 23
 300:	b0 f0       	brcs	.+44     	; 0x32e <__fixunssfsi+0x3e>
 302:	e1 f0       	breq	.+56     	; 0x33c <__fixunssfsi+0x4c>
 304:	66 0f       	add	r22, r22
 306:	77 1f       	adc	r23, r23
 308:	88 1f       	adc	r24, r24
 30a:	99 1f       	adc	r25, r25
 30c:	1a f0       	brmi	.+6      	; 0x314 <__fixunssfsi+0x24>
 30e:	ba 95       	dec	r27
 310:	c9 f7       	brne	.-14     	; 0x304 <__fixunssfsi+0x14>
 312:	14 c0       	rjmp	.+40     	; 0x33c <__fixunssfsi+0x4c>
 314:	b1 30       	cpi	r27, 0x01	; 1
 316:	91 f0       	breq	.+36     	; 0x33c <__fixunssfsi+0x4c>
 318:	0e 94 79 02 	call	0x4f2	; 0x4f2 <__fp_zero>
 31c:	b1 e0       	ldi	r27, 0x01	; 1
 31e:	08 95       	ret
 320:	0c 94 79 02 	jmp	0x4f2	; 0x4f2 <__fp_zero>
 324:	67 2f       	mov	r22, r23
 326:	78 2f       	mov	r23, r24
 328:	88 27       	eor	r24, r24
 32a:	b8 5f       	subi	r27, 0xF8	; 248
 32c:	39 f0       	breq	.+14     	; 0x33c <__fixunssfsi+0x4c>
 32e:	b9 3f       	cpi	r27, 0xF9	; 249
 330:	cc f3       	brlt	.-14     	; 0x324 <__fixunssfsi+0x34>
 332:	86 95       	lsr	r24
 334:	77 95       	ror	r23
 336:	67 95       	ror	r22
 338:	b3 95       	inc	r27
 33a:	d9 f7       	brne	.-10     	; 0x332 <__fixunssfsi+0x42>
 33c:	3e f4       	brtc	.+14     	; 0x34c <__fixunssfsi+0x5c>
 33e:	90 95       	com	r25
 340:	80 95       	com	r24
 342:	70 95       	com	r23
 344:	61 95       	neg	r22
 346:	7f 4f       	sbci	r23, 0xFF	; 255
 348:	8f 4f       	sbci	r24, 0xFF	; 255
 34a:	9f 4f       	sbci	r25, 0xFF	; 255
 34c:	08 95       	ret

0000034e <__floatunsisf>:
 34e:	e8 94       	clt
 350:	09 c0       	rjmp	.+18     	; 0x364 <__floatsisf+0x12>

00000352 <__floatsisf>:
 352:	97 fb       	bst	r25, 7
 354:	3e f4       	brtc	.+14     	; 0x364 <__floatsisf+0x12>
 356:	90 95       	com	r25
 358:	80 95       	com	r24
 35a:	70 95       	com	r23
 35c:	61 95       	neg	r22
 35e:	7f 4f       	sbci	r23, 0xFF	; 255
 360:	8f 4f       	sbci	r24, 0xFF	; 255
 362:	9f 4f       	sbci	r25, 0xFF	; 255
 364:	99 23       	and	r25, r25
 366:	a9 f0       	breq	.+42     	; 0x392 <__floatsisf+0x40>
 368:	f9 2f       	mov	r31, r25
 36a:	96 e9       	ldi	r25, 0x96	; 150
 36c:	bb 27       	eor	r27, r27
 36e:	93 95       	inc	r25
 370:	f6 95       	lsr	r31
 372:	87 95       	ror	r24
 374:	77 95       	ror	r23
 376:	67 95       	ror	r22
 378:	b7 95       	ror	r27
 37a:	f1 11       	cpse	r31, r1
 37c:	f8 cf       	rjmp	.-16     	; 0x36e <__floatsisf+0x1c>
 37e:	fa f4       	brpl	.+62     	; 0x3be <__floatsisf+0x6c>
 380:	bb 0f       	add	r27, r27
 382:	11 f4       	brne	.+4      	; 0x388 <__floatsisf+0x36>
 384:	60 ff       	sbrs	r22, 0
 386:	1b c0       	rjmp	.+54     	; 0x3be <__floatsisf+0x6c>
 388:	6f 5f       	subi	r22, 0xFF	; 255
 38a:	7f 4f       	sbci	r23, 0xFF	; 255
 38c:	8f 4f       	sbci	r24, 0xFF	; 255
 38e:	9f 4f       	sbci	r25, 0xFF	; 255
 390:	16 c0       	rjmp	.+44     	; 0x3be <__floatsisf+0x6c>
 392:	88 23       	and	r24, r24
 394:	11 f0       	breq	.+4      	; 0x39a <__floatsisf+0x48>
 396:	96 e9       	ldi	r25, 0x96	; 150
 398:	11 c0       	rjmp	.+34     	; 0x3bc <__floatsisf+0x6a>
 39a:	77 23       	and	r23, r23
 39c:	21 f0       	breq	.+8      	; 0x3a6 <__floatsisf+0x54>
 39e:	9e e8       	ldi	r25, 0x8E	; 142
 3a0:	87 2f       	mov	r24, r23
 3a2:	76 2f       	mov	r23, r22
 3a4:	05 c0       	rjmp	.+10     	; 0x3b0 <__floatsisf+0x5e>
 3a6:	66 23       	and	r22, r22
 3a8:	71 f0       	breq	.+28     	; 0x3c6 <__floatsisf+0x74>
 3aa:	96 e8       	ldi	r25, 0x86	; 134
 3ac:	86 2f       	mov	r24, r22
 3ae:	70 e0       	ldi	r23, 0x00	; 0
 3b0:	60 e0       	ldi	r22, 0x00	; 0
 3b2:	2a f0       	brmi	.+10     	; 0x3be <__floatsisf+0x6c>
 3b4:	9a 95       	dec	r25
 3b6:	66 0f       	add	r22, r22
 3b8:	77 1f       	adc	r23, r23
 3ba:	88 1f       	adc	r24, r24
 3bc:	da f7       	brpl	.-10     	; 0x3b4 <__floatsisf+0x62>
 3be:	88 0f       	add	r24, r24
 3c0:	96 95       	lsr	r25
 3c2:	87 95       	ror	r24
 3c4:	97 f9       	bld	r25, 7
 3c6:	08 95       	ret

000003c8 <__fp_cmp>:
 3c8:	99 0f       	add	r25, r25
 3ca:	00 08       	sbc	r0, r0
 3cc:	55 0f       	add	r21, r21
 3ce:	aa 0b       	sbc	r26, r26
 3d0:	e0 e8       	ldi	r30, 0x80	; 128
 3d2:	fe ef       	ldi	r31, 0xFE	; 254
 3d4:	16 16       	cp	r1, r22
 3d6:	17 06       	cpc	r1, r23
 3d8:	e8 07       	cpc	r30, r24
 3da:	f9 07       	cpc	r31, r25
 3dc:	c0 f0       	brcs	.+48     	; 0x40e <__FUSE_REGION_LENGTH__+0xe>
 3de:	12 16       	cp	r1, r18
 3e0:	13 06       	cpc	r1, r19
 3e2:	e4 07       	cpc	r30, r20
 3e4:	f5 07       	cpc	r31, r21
 3e6:	98 f0       	brcs	.+38     	; 0x40e <__FUSE_REGION_LENGTH__+0xe>
 3e8:	62 1b       	sub	r22, r18
 3ea:	73 0b       	sbc	r23, r19
 3ec:	84 0b       	sbc	r24, r20
 3ee:	95 0b       	sbc	r25, r21
 3f0:	39 f4       	brne	.+14     	; 0x400 <__FUSE_REGION_LENGTH__>
 3f2:	0a 26       	eor	r0, r26
 3f4:	61 f0       	breq	.+24     	; 0x40e <__FUSE_REGION_LENGTH__+0xe>
 3f6:	23 2b       	or	r18, r19
 3f8:	24 2b       	or	r18, r20
 3fa:	25 2b       	or	r18, r21
 3fc:	21 f4       	brne	.+8      	; 0x406 <__FUSE_REGION_LENGTH__+0x6>
 3fe:	08 95       	ret
 400:	0a 26       	eor	r0, r26
 402:	09 f4       	brne	.+2      	; 0x406 <__FUSE_REGION_LENGTH__+0x6>
 404:	a1 40       	sbci	r26, 0x01	; 1
 406:	a6 95       	lsr	r26
 408:	8f ef       	ldi	r24, 0xFF	; 255
 40a:	81 1d       	adc	r24, r1
 40c:	81 1d       	adc	r24, r1
 40e:	08 95       	ret

00000410 <__fp_inf>:
 410:	97 f9       	bld	r25, 7
 412:	9f 67       	ori	r25, 0x7F	; 127
 414:	80 e8       	ldi	r24, 0x80	; 128
 416:	70 e0       	ldi	r23, 0x00	; 0
 418:	60 e0       	ldi	r22, 0x00	; 0
 41a:	08 95       	ret

0000041c <__fp_nan>:
 41c:	9f ef       	ldi	r25, 0xFF	; 255
 41e:	80 ec       	ldi	r24, 0xC0	; 192
 420:	08 95       	ret

00000422 <__fp_powser>:
 422:	df 93       	push	r29
 424:	cf 93       	push	r28
 426:	1f 93       	push	r17
 428:	0f 93       	push	r16
 42a:	ff 92       	push	r15
 42c:	ef 92       	push	r14
 42e:	df 92       	push	r13
 430:	7b 01       	movw	r14, r22
 432:	8c 01       	movw	r16, r24
 434:	68 94       	set
 436:	06 c0       	rjmp	.+12     	; 0x444 <__fp_powser+0x22>
 438:	da 2e       	mov	r13, r26
 43a:	ef 01       	movw	r28, r30
 43c:	0e 94 0e 03 	call	0x61c	; 0x61c <__mulsf3x>
 440:	fe 01       	movw	r30, r28
 442:	e8 94       	clt
 444:	a5 91       	lpm	r26, Z+
 446:	25 91       	lpm	r18, Z+
 448:	35 91       	lpm	r19, Z+
 44a:	45 91       	lpm	r20, Z+
 44c:	55 91       	lpm	r21, Z+
 44e:	a6 f3       	brts	.-24     	; 0x438 <__fp_powser+0x16>
 450:	ef 01       	movw	r28, r30
 452:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <__addsf3x>
 456:	fe 01       	movw	r30, r28
 458:	97 01       	movw	r18, r14
 45a:	a8 01       	movw	r20, r16
 45c:	da 94       	dec	r13
 45e:	69 f7       	brne	.-38     	; 0x43a <__fp_powser+0x18>
 460:	df 90       	pop	r13
 462:	ef 90       	pop	r14
 464:	ff 90       	pop	r15
 466:	0f 91       	pop	r16
 468:	1f 91       	pop	r17
 46a:	cf 91       	pop	r28
 46c:	df 91       	pop	r29
 46e:	08 95       	ret

00000470 <__fp_pscA>:
 470:	00 24       	eor	r0, r0
 472:	0a 94       	dec	r0
 474:	16 16       	cp	r1, r22
 476:	17 06       	cpc	r1, r23
 478:	18 06       	cpc	r1, r24
 47a:	09 06       	cpc	r0, r25
 47c:	08 95       	ret

0000047e <__fp_pscB>:
 47e:	00 24       	eor	r0, r0
 480:	0a 94       	dec	r0
 482:	12 16       	cp	r1, r18
 484:	13 06       	cpc	r1, r19
 486:	14 06       	cpc	r1, r20
 488:	05 06       	cpc	r0, r21
 48a:	08 95       	ret

0000048c <__fp_round>:
 48c:	09 2e       	mov	r0, r25
 48e:	03 94       	inc	r0
 490:	00 0c       	add	r0, r0
 492:	11 f4       	brne	.+4      	; 0x498 <__fp_round+0xc>
 494:	88 23       	and	r24, r24
 496:	52 f0       	brmi	.+20     	; 0x4ac <__fp_round+0x20>
 498:	bb 0f       	add	r27, r27
 49a:	40 f4       	brcc	.+16     	; 0x4ac <__fp_round+0x20>
 49c:	bf 2b       	or	r27, r31
 49e:	11 f4       	brne	.+4      	; 0x4a4 <__fp_round+0x18>
 4a0:	60 ff       	sbrs	r22, 0
 4a2:	04 c0       	rjmp	.+8      	; 0x4ac <__fp_round+0x20>
 4a4:	6f 5f       	subi	r22, 0xFF	; 255
 4a6:	7f 4f       	sbci	r23, 0xFF	; 255
 4a8:	8f 4f       	sbci	r24, 0xFF	; 255
 4aa:	9f 4f       	sbci	r25, 0xFF	; 255
 4ac:	08 95       	ret

000004ae <__fp_split3>:
 4ae:	57 fd       	sbrc	r21, 7
 4b0:	90 58       	subi	r25, 0x80	; 128
 4b2:	44 0f       	add	r20, r20
 4b4:	55 1f       	adc	r21, r21
 4b6:	59 f0       	breq	.+22     	; 0x4ce <__fp_splitA+0x10>
 4b8:	5f 3f       	cpi	r21, 0xFF	; 255
 4ba:	71 f0       	breq	.+28     	; 0x4d8 <__fp_splitA+0x1a>
 4bc:	47 95       	ror	r20

000004be <__fp_splitA>:
 4be:	88 0f       	add	r24, r24
 4c0:	97 fb       	bst	r25, 7
 4c2:	99 1f       	adc	r25, r25
 4c4:	61 f0       	breq	.+24     	; 0x4de <__fp_splitA+0x20>
 4c6:	9f 3f       	cpi	r25, 0xFF	; 255
 4c8:	79 f0       	breq	.+30     	; 0x4e8 <__fp_splitA+0x2a>
 4ca:	87 95       	ror	r24
 4cc:	08 95       	ret
 4ce:	12 16       	cp	r1, r18
 4d0:	13 06       	cpc	r1, r19
 4d2:	14 06       	cpc	r1, r20
 4d4:	55 1f       	adc	r21, r21
 4d6:	f2 cf       	rjmp	.-28     	; 0x4bc <__fp_split3+0xe>
 4d8:	46 95       	lsr	r20
 4da:	f1 df       	rcall	.-30     	; 0x4be <__fp_splitA>
 4dc:	08 c0       	rjmp	.+16     	; 0x4ee <__fp_splitA+0x30>
 4de:	16 16       	cp	r1, r22
 4e0:	17 06       	cpc	r1, r23
 4e2:	18 06       	cpc	r1, r24
 4e4:	99 1f       	adc	r25, r25
 4e6:	f1 cf       	rjmp	.-30     	; 0x4ca <__fp_splitA+0xc>
 4e8:	86 95       	lsr	r24
 4ea:	71 05       	cpc	r23, r1
 4ec:	61 05       	cpc	r22, r1
 4ee:	08 94       	sec
 4f0:	08 95       	ret

000004f2 <__fp_zero>:
 4f2:	e8 94       	clt

000004f4 <__fp_szero>:
 4f4:	bb 27       	eor	r27, r27
 4f6:	66 27       	eor	r22, r22
 4f8:	77 27       	eor	r23, r23
 4fa:	cb 01       	movw	r24, r22
 4fc:	97 f9       	bld	r25, 7
 4fe:	08 95       	ret

00000500 <__gesf2>:
 500:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <__fp_cmp>
 504:	08 f4       	brcc	.+2      	; 0x508 <__gesf2+0x8>
 506:	8f ef       	ldi	r24, 0xFF	; 255
 508:	08 95       	ret

0000050a <inverse>:
 50a:	9b 01       	movw	r18, r22
 50c:	ac 01       	movw	r20, r24
 50e:	60 e0       	ldi	r22, 0x00	; 0
 510:	70 e0       	ldi	r23, 0x00	; 0
 512:	80 e8       	ldi	r24, 0x80	; 128
 514:	9f e3       	ldi	r25, 0x3F	; 63
 516:	0c 94 68 03 	jmp	0x6d0	; 0x6d0 <__divsf3>
 51a:	0c 94 08 02 	jmp	0x410	; 0x410 <__fp_inf>
 51e:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__fp_mpack>

00000522 <ldexp>:
 522:	0e 94 5f 02 	call	0x4be	; 0x4be <__fp_splitA>
 526:	d8 f3       	brcs	.-10     	; 0x51e <inverse+0x14>
 528:	99 23       	and	r25, r25
 52a:	c9 f3       	breq	.-14     	; 0x51e <inverse+0x14>
 52c:	94 0f       	add	r25, r20
 52e:	51 1d       	adc	r21, r1
 530:	a3 f3       	brvs	.-24     	; 0x51a <inverse+0x10>
 532:	91 50       	subi	r25, 0x01	; 1
 534:	50 40       	sbci	r21, 0x00	; 0
 536:	94 f0       	brlt	.+36     	; 0x55c <ldexp+0x3a>
 538:	59 f0       	breq	.+22     	; 0x550 <ldexp+0x2e>
 53a:	88 23       	and	r24, r24
 53c:	32 f0       	brmi	.+12     	; 0x54a <ldexp+0x28>
 53e:	66 0f       	add	r22, r22
 540:	77 1f       	adc	r23, r23
 542:	88 1f       	adc	r24, r24
 544:	91 50       	subi	r25, 0x01	; 1
 546:	50 40       	sbci	r21, 0x00	; 0
 548:	c1 f7       	brne	.-16     	; 0x53a <ldexp+0x18>
 54a:	9e 3f       	cpi	r25, 0xFE	; 254
 54c:	51 05       	cpc	r21, r1
 54e:	2c f7       	brge	.-54     	; 0x51a <inverse+0x10>
 550:	88 0f       	add	r24, r24
 552:	91 1d       	adc	r25, r1
 554:	96 95       	lsr	r25
 556:	87 95       	ror	r24
 558:	97 f9       	bld	r25, 7
 55a:	08 95       	ret
 55c:	5f 3f       	cpi	r21, 0xFF	; 255
 55e:	ac f0       	brlt	.+42     	; 0x58a <ldexp+0x68>
 560:	98 3e       	cpi	r25, 0xE8	; 232
 562:	9c f0       	brlt	.+38     	; 0x58a <ldexp+0x68>
 564:	bb 27       	eor	r27, r27
 566:	86 95       	lsr	r24
 568:	77 95       	ror	r23
 56a:	67 95       	ror	r22
 56c:	b7 95       	ror	r27
 56e:	08 f4       	brcc	.+2      	; 0x572 <ldexp+0x50>
 570:	b1 60       	ori	r27, 0x01	; 1
 572:	93 95       	inc	r25
 574:	c1 f7       	brne	.-16     	; 0x566 <ldexp+0x44>
 576:	bb 0f       	add	r27, r27
 578:	58 f7       	brcc	.-42     	; 0x550 <ldexp+0x2e>
 57a:	11 f4       	brne	.+4      	; 0x580 <ldexp+0x5e>
 57c:	60 ff       	sbrs	r22, 0
 57e:	e8 cf       	rjmp	.-48     	; 0x550 <ldexp+0x2e>
 580:	6f 5f       	subi	r22, 0xFF	; 255
 582:	7f 4f       	sbci	r23, 0xFF	; 255
 584:	8f 4f       	sbci	r24, 0xFF	; 255
 586:	9f 4f       	sbci	r25, 0xFF	; 255
 588:	e3 cf       	rjmp	.-58     	; 0x550 <ldexp+0x2e>
 58a:	0c 94 7a 02 	jmp	0x4f4	; 0x4f4 <__fp_szero>

0000058e <modf>:
 58e:	fa 01       	movw	r30, r20
 590:	dc 01       	movw	r26, r24
 592:	aa 0f       	add	r26, r26
 594:	bb 1f       	adc	r27, r27
 596:	9b 01       	movw	r18, r22
 598:	ac 01       	movw	r20, r24
 59a:	bf 57       	subi	r27, 0x7F	; 127
 59c:	28 f4       	brcc	.+10     	; 0x5a8 <modf+0x1a>
 59e:	22 27       	eor	r18, r18
 5a0:	33 27       	eor	r19, r19
 5a2:	44 27       	eor	r20, r20
 5a4:	50 78       	andi	r21, 0x80	; 128
 5a6:	20 c0       	rjmp	.+64     	; 0x5e8 <modf+0x5a>
 5a8:	b7 51       	subi	r27, 0x17	; 23
 5aa:	90 f4       	brcc	.+36     	; 0x5d0 <modf+0x42>
 5ac:	ab 2f       	mov	r26, r27
 5ae:	00 24       	eor	r0, r0
 5b0:	46 95       	lsr	r20
 5b2:	37 95       	ror	r19
 5b4:	27 95       	ror	r18
 5b6:	01 1c       	adc	r0, r1
 5b8:	a3 95       	inc	r26
 5ba:	d2 f3       	brmi	.-12     	; 0x5b0 <modf+0x22>
 5bc:	00 20       	and	r0, r0
 5be:	71 f0       	breq	.+28     	; 0x5dc <modf+0x4e>
 5c0:	22 0f       	add	r18, r18
 5c2:	33 1f       	adc	r19, r19
 5c4:	44 1f       	adc	r20, r20
 5c6:	b3 95       	inc	r27
 5c8:	da f3       	brmi	.-10     	; 0x5c0 <modf+0x32>
 5ca:	0e d0       	rcall	.+28     	; 0x5e8 <modf+0x5a>
 5cc:	0c 94 cc 00 	jmp	0x198	; 0x198 <__subsf3>
 5d0:	61 30       	cpi	r22, 0x01	; 1
 5d2:	71 05       	cpc	r23, r1
 5d4:	a0 e8       	ldi	r26, 0x80	; 128
 5d6:	8a 07       	cpc	r24, r26
 5d8:	b9 46       	sbci	r27, 0x69	; 105
 5da:	30 f4       	brcc	.+12     	; 0x5e8 <modf+0x5a>
 5dc:	9b 01       	movw	r18, r22
 5de:	ac 01       	movw	r20, r24
 5e0:	66 27       	eor	r22, r22
 5e2:	77 27       	eor	r23, r23
 5e4:	88 27       	eor	r24, r24
 5e6:	90 78       	andi	r25, 0x80	; 128
 5e8:	30 96       	adiw	r30, 0x00	; 0
 5ea:	21 f0       	breq	.+8      	; 0x5f4 <modf+0x66>
 5ec:	20 83       	st	Z, r18
 5ee:	31 83       	std	Z+1, r19	; 0x01
 5f0:	42 83       	std	Z+2, r20	; 0x02
 5f2:	53 83       	std	Z+3, r21	; 0x03
 5f4:	08 95       	ret

000005f6 <__mulsf3>:
 5f6:	0e 94 0e 03 	call	0x61c	; 0x61c <__mulsf3x>
 5fa:	0c 94 46 02 	jmp	0x48c	; 0x48c <__fp_round>
 5fe:	0e 94 38 02 	call	0x470	; 0x470 <__fp_pscA>
 602:	38 f0       	brcs	.+14     	; 0x612 <__mulsf3+0x1c>
 604:	0e 94 3f 02 	call	0x47e	; 0x47e <__fp_pscB>
 608:	20 f0       	brcs	.+8      	; 0x612 <__mulsf3+0x1c>
 60a:	95 23       	and	r25, r21
 60c:	11 f0       	breq	.+4      	; 0x612 <__mulsf3+0x1c>
 60e:	0c 94 08 02 	jmp	0x410	; 0x410 <__fp_inf>
 612:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__fp_nan>
 616:	11 24       	eor	r1, r1
 618:	0c 94 7a 02 	jmp	0x4f4	; 0x4f4 <__fp_szero>

0000061c <__mulsf3x>:
 61c:	0e 94 57 02 	call	0x4ae	; 0x4ae <__fp_split3>
 620:	70 f3       	brcs	.-36     	; 0x5fe <__mulsf3+0x8>

00000622 <__mulsf3_pse>:
 622:	95 9f       	mul	r25, r21
 624:	c1 f3       	breq	.-16     	; 0x616 <__mulsf3+0x20>
 626:	95 0f       	add	r25, r21
 628:	50 e0       	ldi	r21, 0x00	; 0
 62a:	55 1f       	adc	r21, r21
 62c:	62 9f       	mul	r22, r18
 62e:	f0 01       	movw	r30, r0
 630:	72 9f       	mul	r23, r18
 632:	bb 27       	eor	r27, r27
 634:	f0 0d       	add	r31, r0
 636:	b1 1d       	adc	r27, r1
 638:	63 9f       	mul	r22, r19
 63a:	aa 27       	eor	r26, r26
 63c:	f0 0d       	add	r31, r0
 63e:	b1 1d       	adc	r27, r1
 640:	aa 1f       	adc	r26, r26
 642:	64 9f       	mul	r22, r20
 644:	66 27       	eor	r22, r22
 646:	b0 0d       	add	r27, r0
 648:	a1 1d       	adc	r26, r1
 64a:	66 1f       	adc	r22, r22
 64c:	82 9f       	mul	r24, r18
 64e:	22 27       	eor	r18, r18
 650:	b0 0d       	add	r27, r0
 652:	a1 1d       	adc	r26, r1
 654:	62 1f       	adc	r22, r18
 656:	73 9f       	mul	r23, r19
 658:	b0 0d       	add	r27, r0
 65a:	a1 1d       	adc	r26, r1
 65c:	62 1f       	adc	r22, r18
 65e:	83 9f       	mul	r24, r19
 660:	a0 0d       	add	r26, r0
 662:	61 1d       	adc	r22, r1
 664:	22 1f       	adc	r18, r18
 666:	74 9f       	mul	r23, r20
 668:	33 27       	eor	r19, r19
 66a:	a0 0d       	add	r26, r0
 66c:	61 1d       	adc	r22, r1
 66e:	23 1f       	adc	r18, r19
 670:	84 9f       	mul	r24, r20
 672:	60 0d       	add	r22, r0
 674:	21 1d       	adc	r18, r1
 676:	82 2f       	mov	r24, r18
 678:	76 2f       	mov	r23, r22
 67a:	6a 2f       	mov	r22, r26
 67c:	11 24       	eor	r1, r1
 67e:	9f 57       	subi	r25, 0x7F	; 127
 680:	50 40       	sbci	r21, 0x00	; 0
 682:	9a f0       	brmi	.+38     	; 0x6aa <__mulsf3_pse+0x88>
 684:	f1 f0       	breq	.+60     	; 0x6c2 <__mulsf3_pse+0xa0>
 686:	88 23       	and	r24, r24
 688:	4a f0       	brmi	.+18     	; 0x69c <__mulsf3_pse+0x7a>
 68a:	ee 0f       	add	r30, r30
 68c:	ff 1f       	adc	r31, r31
 68e:	bb 1f       	adc	r27, r27
 690:	66 1f       	adc	r22, r22
 692:	77 1f       	adc	r23, r23
 694:	88 1f       	adc	r24, r24
 696:	91 50       	subi	r25, 0x01	; 1
 698:	50 40       	sbci	r21, 0x00	; 0
 69a:	a9 f7       	brne	.-22     	; 0x686 <__mulsf3_pse+0x64>
 69c:	9e 3f       	cpi	r25, 0xFE	; 254
 69e:	51 05       	cpc	r21, r1
 6a0:	80 f0       	brcs	.+32     	; 0x6c2 <__mulsf3_pse+0xa0>
 6a2:	0c 94 08 02 	jmp	0x410	; 0x410 <__fp_inf>
 6a6:	0c 94 7a 02 	jmp	0x4f4	; 0x4f4 <__fp_szero>
 6aa:	5f 3f       	cpi	r21, 0xFF	; 255
 6ac:	e4 f3       	brlt	.-8      	; 0x6a6 <__mulsf3_pse+0x84>
 6ae:	98 3e       	cpi	r25, 0xE8	; 232
 6b0:	d4 f3       	brlt	.-12     	; 0x6a6 <__mulsf3_pse+0x84>
 6b2:	86 95       	lsr	r24
 6b4:	77 95       	ror	r23
 6b6:	67 95       	ror	r22
 6b8:	b7 95       	ror	r27
 6ba:	f7 95       	ror	r31
 6bc:	e7 95       	ror	r30
 6be:	9f 5f       	subi	r25, 0xFF	; 255
 6c0:	c1 f7       	brne	.-16     	; 0x6b2 <__mulsf3_pse+0x90>
 6c2:	fe 2b       	or	r31, r30
 6c4:	88 0f       	add	r24, r24
 6c6:	91 1d       	adc	r25, r1
 6c8:	96 95       	lsr	r25
 6ca:	87 95       	ror	r24
 6cc:	97 f9       	bld	r25, 7
 6ce:	08 95       	ret

000006d0 <__divsf3>:
 6d0:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <__divsf3x>
 6d4:	0c 94 46 02 	jmp	0x48c	; 0x48c <__fp_round>
 6d8:	0e 94 3f 02 	call	0x47e	; 0x47e <__fp_pscB>
 6dc:	58 f0       	brcs	.+22     	; 0x6f4 <__divsf3+0x24>
 6de:	0e 94 38 02 	call	0x470	; 0x470 <__fp_pscA>
 6e2:	40 f0       	brcs	.+16     	; 0x6f4 <__divsf3+0x24>
 6e4:	29 f4       	brne	.+10     	; 0x6f0 <__divsf3+0x20>
 6e6:	5f 3f       	cpi	r21, 0xFF	; 255
 6e8:	29 f0       	breq	.+10     	; 0x6f4 <__divsf3+0x24>
 6ea:	0c 94 08 02 	jmp	0x410	; 0x410 <__fp_inf>
 6ee:	51 11       	cpse	r21, r1
 6f0:	0c 94 7a 02 	jmp	0x4f4	; 0x4f4 <__fp_szero>
 6f4:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__fp_nan>

000006f8 <__divsf3x>:
 6f8:	0e 94 57 02 	call	0x4ae	; 0x4ae <__fp_split3>
 6fc:	68 f3       	brcs	.-38     	; 0x6d8 <__divsf3+0x8>

000006fe <__divsf3_pse>:
 6fe:	99 23       	and	r25, r25
 700:	b1 f3       	breq	.-20     	; 0x6ee <__divsf3+0x1e>
 702:	55 23       	and	r21, r21
 704:	91 f3       	breq	.-28     	; 0x6ea <__divsf3+0x1a>
 706:	95 1b       	sub	r25, r21
 708:	55 0b       	sbc	r21, r21
 70a:	bb 27       	eor	r27, r27
 70c:	aa 27       	eor	r26, r26
 70e:	62 17       	cp	r22, r18
 710:	73 07       	cpc	r23, r19
 712:	84 07       	cpc	r24, r20
 714:	38 f0       	brcs	.+14     	; 0x724 <__divsf3_pse+0x26>
 716:	9f 5f       	subi	r25, 0xFF	; 255
 718:	5f 4f       	sbci	r21, 0xFF	; 255
 71a:	22 0f       	add	r18, r18
 71c:	33 1f       	adc	r19, r19
 71e:	44 1f       	adc	r20, r20
 720:	aa 1f       	adc	r26, r26
 722:	a9 f3       	breq	.-22     	; 0x70e <__divsf3_pse+0x10>
 724:	35 d0       	rcall	.+106    	; 0x790 <__divsf3_pse+0x92>
 726:	0e 2e       	mov	r0, r30
 728:	3a f0       	brmi	.+14     	; 0x738 <__divsf3_pse+0x3a>
 72a:	e0 e8       	ldi	r30, 0x80	; 128
 72c:	32 d0       	rcall	.+100    	; 0x792 <__divsf3_pse+0x94>
 72e:	91 50       	subi	r25, 0x01	; 1
 730:	50 40       	sbci	r21, 0x00	; 0
 732:	e6 95       	lsr	r30
 734:	00 1c       	adc	r0, r0
 736:	ca f7       	brpl	.-14     	; 0x72a <__divsf3_pse+0x2c>
 738:	2b d0       	rcall	.+86     	; 0x790 <__divsf3_pse+0x92>
 73a:	fe 2f       	mov	r31, r30
 73c:	29 d0       	rcall	.+82     	; 0x790 <__divsf3_pse+0x92>
 73e:	66 0f       	add	r22, r22
 740:	77 1f       	adc	r23, r23
 742:	88 1f       	adc	r24, r24
 744:	bb 1f       	adc	r27, r27
 746:	26 17       	cp	r18, r22
 748:	37 07       	cpc	r19, r23
 74a:	48 07       	cpc	r20, r24
 74c:	ab 07       	cpc	r26, r27
 74e:	b0 e8       	ldi	r27, 0x80	; 128
 750:	09 f0       	breq	.+2      	; 0x754 <__divsf3_pse+0x56>
 752:	bb 0b       	sbc	r27, r27
 754:	80 2d       	mov	r24, r0
 756:	bf 01       	movw	r22, r30
 758:	ff 27       	eor	r31, r31
 75a:	93 58       	subi	r25, 0x83	; 131
 75c:	5f 4f       	sbci	r21, 0xFF	; 255
 75e:	3a f0       	brmi	.+14     	; 0x76e <__divsf3_pse+0x70>
 760:	9e 3f       	cpi	r25, 0xFE	; 254
 762:	51 05       	cpc	r21, r1
 764:	78 f0       	brcs	.+30     	; 0x784 <__divsf3_pse+0x86>
 766:	0c 94 08 02 	jmp	0x410	; 0x410 <__fp_inf>
 76a:	0c 94 7a 02 	jmp	0x4f4	; 0x4f4 <__fp_szero>
 76e:	5f 3f       	cpi	r21, 0xFF	; 255
 770:	e4 f3       	brlt	.-8      	; 0x76a <__divsf3_pse+0x6c>
 772:	98 3e       	cpi	r25, 0xE8	; 232
 774:	d4 f3       	brlt	.-12     	; 0x76a <__divsf3_pse+0x6c>
 776:	86 95       	lsr	r24
 778:	77 95       	ror	r23
 77a:	67 95       	ror	r22
 77c:	b7 95       	ror	r27
 77e:	f7 95       	ror	r31
 780:	9f 5f       	subi	r25, 0xFF	; 255
 782:	c9 f7       	brne	.-14     	; 0x776 <__divsf3_pse+0x78>
 784:	88 0f       	add	r24, r24
 786:	91 1d       	adc	r25, r1
 788:	96 95       	lsr	r25
 78a:	87 95       	ror	r24
 78c:	97 f9       	bld	r25, 7
 78e:	08 95       	ret
 790:	e1 e0       	ldi	r30, 0x01	; 1
 792:	66 0f       	add	r22, r22
 794:	77 1f       	adc	r23, r23
 796:	88 1f       	adc	r24, r24
 798:	bb 1f       	adc	r27, r27
 79a:	62 17       	cp	r22, r18
 79c:	73 07       	cpc	r23, r19
 79e:	84 07       	cpc	r24, r20
 7a0:	ba 07       	cpc	r27, r26
 7a2:	20 f0       	brcs	.+8      	; 0x7ac <__divsf3_pse+0xae>
 7a4:	62 1b       	sub	r22, r18
 7a6:	73 0b       	sbc	r23, r19
 7a8:	84 0b       	sbc	r24, r20
 7aa:	ba 0b       	sbc	r27, r26
 7ac:	ee 1f       	adc	r30, r30
 7ae:	88 f7       	brcc	.-30     	; 0x792 <__divsf3_pse+0x94>
 7b0:	e0 95       	com	r30
 7b2:	08 95       	ret

000007b4 <__fp_mpack>:
 7b4:	9f 3f       	cpi	r25, 0xFF	; 255
 7b6:	31 f0       	breq	.+12     	; 0x7c4 <__fp_mpack_finite+0xc>

000007b8 <__fp_mpack_finite>:
 7b8:	91 50       	subi	r25, 0x01	; 1
 7ba:	20 f4       	brcc	.+8      	; 0x7c4 <__fp_mpack_finite+0xc>
 7bc:	87 95       	ror	r24
 7be:	77 95       	ror	r23
 7c0:	67 95       	ror	r22
 7c2:	b7 95       	ror	r27
 7c4:	88 0f       	add	r24, r24
 7c6:	91 1d       	adc	r25, r1
 7c8:	96 95       	lsr	r25
 7ca:	87 95       	ror	r24
 7cc:	97 f9       	bld	r25, 7
 7ce:	08 95       	ret

000007d0 <_exit>:
 7d0:	f8 94       	cli

000007d2 <__stop_program>:
 7d2:	ff cf       	rjmp	.-2      	; 0x7d2 <__stop_program>
